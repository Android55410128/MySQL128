package app.lap.mysql_55410128;

public class JSONParser {

	private static InputStream is = null;
	private static JSONObject jsonObject = null;
	private static String result = null;

	public JSONObject makeHttpRequest(String url, String method,
			List<NameValuePair> params) {

		try {
			if (method == "POST") {
				DefaultHttpClient client = new DefaultHttpClient();
				HttpPost httpPost = new HttpPost(url);
				httpPost.setEntity(new UrlEncodedFormEntity(params));

				HttpResponse httpResponse = client.execute(httpPost);
				HttpEntity httpEntity = httpResponse.getEntity();
				is = httpEntity.getContent();

			} else if (method == "GET") {
				DefaultHttpClient client = new DefaultHttpClient();
				String paramString = URLEncodedUtils.format(params, "UTF-8");

				url += "?" + paramString;
				HttpGet httpGet = new HttpGet(url);

				HttpResponse httpResponse = client.execute(httpGet);
				HttpEntity httpEntity = httpResponse.getEntity();
				is = httpEntity.getContent();

			}
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		} catch (ClientProtocolException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		try {
			BufferedReader reader = new BufferedReader(new InputStreamReader(
					is, "UTF-8"));
			StringBuilder builder = new StringBuilder();
			String line = null;
			while ((line = reader.readLine()) != null) {
				builder.append(line + "\n");
			}
			is.close();
			result = builder.toString();

		} catch (Exception e) {
			Log.e("Buffer Error Parser",
					"Error converting result " + e.toString());
		}
		try {
			jsonObject = new JSONObject(result);
		} catch (JSONException e) {
			Log.e("JSON Parser", "Error parsing data" + e.toString());
		}

		return null;

	}

}
